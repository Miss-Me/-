<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Miss Me</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-14T07:31:55.530Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Miss Me</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2017/12/13/test/"/>
    <id>http://yoursite.com/2017/12/13/test/</id>
    <published>2017-12-13T10:40:15.000Z</published>
    <updated>2017-12-14T07:31:55.530Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/12/13/test/test.PNG" alt="test"></p><blockquote><p>test test test</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2017/12/13/test/test.PNG&quot; alt=&quot;test&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;test test test&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mongoDB安装与配置</title>
    <link href="http://yoursite.com/2017/07/26/mongoDB%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/07/26/mongoDB安装与配置/</id>
    <published>2017-07-26T06:49:12.000Z</published>
    <updated>2017-12-14T07:47:00.442Z</updated>
    
    <content type="html"><![CDATA[<p>00x1 mongodb的安装与配置</p><blockquote><p>1.在mongodb的官网<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">https://www.mongodb.com/download-center#community</a> 下载安装文件。<br><a id="more"></a><br>    进入官网，直接点击donwnload即可。<br><img src="http://oloaybpun.bkt.clouddn.com/1.PNG" alt="Alt text"><br>2.双击.msi文件安装<br><img src="http://oloaybpun.bkt.clouddn.com/2.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/3.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/4.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/5.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/6.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/7.png" alt="Alt text"></p><p><img src="http://oloaybpun.bkt.clouddn.com/8.png" alt="Alt text"></p><p>3.创建数据目录</p></blockquote><pre><code>进入mongodb的安装包，创建数据目录D:\software\mongodb\mkdir dataD:\software\mongodb\cd  dataD:\software\mongodb\data\cd dbD:\software\mongodb\data\db\</code></pre><blockquote><p>4.命令行下运行mongodb服务器</p></blockquote><pre><code>进入mongodb安装目录下的bin文件夹D:\software\mongodb\bin\mongod.exe --dbpath D:\software\mongodb\data\db出现下面的内容就表示正确运行了。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/9.png" alt="Alt text"></p></blockquote><pre><code>当然这一步也有可能出现问题，比如我就遇到了“mongod不是内部或外部命令,也不是可运行的程序”这个问题。最开始我在环境变量中加入了bin文件夹的路径，但是问题没有解决。解决方法：直接在bin文件夹中双击打开mongod.exe文件。同样会出现以上的内容。然后在浏览器中打开http://localhost:27017进行测试。出现下面的内容表示mongodb的服务器正确运行了。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/10.png" alt="Alt text"><br>5.将mongodb安装为windows服务（命令行要有管理员权限）</p></blockquote><pre><code>D:\software\mongodb\bin\mongod --dbpath D:\software\mongodb\data --install但是出现了下面的提示，表明安装失败。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/11.png" alt="Alt text">    </p><p>按照提示，需要指定log目录。因此重新切换到bin目录下，新建logs文件。并在logs文件夹下新建mongodb.log文件。</p></blockquote><pre><code>创建日志目录：    D:\software\mongodb\mkdir logs    D:\software\mongodb\cd logs    D:\software\mongodb\logs    然后重新进入bin文件夹，输入命令：    D:\software\mongodb\bin\mongod --dbpath D:\software\mongodb\data  --logpath=D:\software\mongodb\logs\mongodb.log --logappend.    没有出现错误提示。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/12.png" alt="Alt text"></p><p>也能够正常启动：<br><img src="http://oloaybpun.bkt.clouddn.com/13.png" alt="Alt text"><br>6.MongoDB后台管理shell（命令行要有管理员权限）</p></blockquote><pre><code>打开 MongoDB shell，失败。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/14.png" alt="Alt text"></p><p>   连接失败，net start  MongoDB服务，服务不能正常打开，mongo的服务没有被正确创建。</p></blockquote><pre><code>使用sc命令创建mongodb服务，需要注意的是，这一步的cmd必须要以管理员权限打开。D:\software\mongodb\bin\sc create MongDB binpath=&quot;D:\software\mongo\bin\mongod.exe --service --dbpath D:\software\mongodb\data --logpath=D:\software\mongodb\logs\mongodb.log --logappend 服务创建成功net start MongoDB 服务也可以正常启动</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/15.png" alt="Alt text"></p></blockquote><p> MongoDB Shell是MongoDB自带的交互式Javascript shell,用来对MongoDB进行操作和管理的交互式环境。可以运行一些简单的算术运算</p><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/16.png" alt="Alt text"></p></blockquote><p>7.设置环境变量</p><pre><code>进入电脑上的环境变量，在系统变量下的path中加入mongodb目录下的bin文件的路径。这样命令行就可以在任何位置使用mongodb命令，不需要每次使用mongo和mongod命令的时候都进入bin文件夹下。</code></pre><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/18.PNG" alt="Alt text">     </p></blockquote><p>00x2 配置过程中一些命令的总结</p><blockquote><p>在配置过程中，出现问题最多的是将mongodb安装为windows服务，和mongodb后台管理shell这两步骤。在解决这两步的问题时，尝试了不同的命令，在这里做一个总结。</p></blockquote><h5 id="尝试过的命令："><a href="#尝试过的命令：" class="headerlink" title="尝试过的命令："></a>尝试过的命令：</h5><blockquote><p>1.进入bin文件夹下</p></blockquote><pre><code>mongod.exe --bind_ip yourIPadress --logpath &quot;C:\data\dbConf\mongodb.log&quot; --logappend --dbpath &quot;C:\data\db&quot; --port yourPortNumber --serviceName &quot;YourServiceName&quot; --serviceDisplayName &quot;YourServiceName&quot; --install</code></pre><blockquote><p>2.打开具有管理员身份的cmd</p></blockquote><pre><code>如果已经有某个服务名了，比如MongoDB，那么先把这个服务删了，sc delete MongoDB然后进入mongodb安装目录下的bin文件mongod --logpath d:\data\log\MongoDB.log --logappend --dbpath d:\data\db --serviceName MongoDB --install</code></pre><blockquote><p>3.同样是进入mongodb安装目录下的bin文件下</p></blockquote><pre><code>mongod --logpath &quot;D:\software\mongodb\data\mongodb.log&quot; --logappend --dbpath &quot;D:\software\mongodb\data&quot; --serviceName &quot;MongoDB&quot; --serviceDisplayName &quot;MongoDB&quot; --install在解决这部分问题之后，觉得使用这些命令没有成功的原因可能是命令行没有获取管理员权限，还有就是mongdb的服务没有被正确创建。最正确的创建mongodb服务的方法是使用sc命令进行创建。D:\software\mongodb\bin\sc create MongDBbinpath=&quot;D:\software\mongo\bin\mongod.exe --service --dbpath D:\software\mongodb\data --logpath=D:\software\mongodb\logs\mongodb.log --logappend</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;00x1 mongodb的安装与配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.在mongodb的官网&lt;a href=&quot;https://www.mongodb.com/download-center#community&quot;&gt;https://www.mongodb.com/download-center#community&lt;/a&gt; 下载安装文件。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="mongoDB" scheme="http://yoursite.com/tags/mongoDB/"/>
    
  </entry>
  
  <entry>
    <title>表单提交类型与ajax</title>
    <link href="http://yoursite.com/2017/04/23/%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E7%B1%BB%E5%9E%8B%E4%B8%8Eajax/"/>
    <id>http://yoursite.com/2017/04/23/表单提交类型与ajax/</id>
    <published>2017-04-23T11:53:07.000Z</published>
    <updated>2017-12-14T07:47:02.243Z</updated>
    
    <content type="html"><![CDATA[<p>00x1 问题描述</p><blockquote><p>在写蜜罐时，遇到了form表单提交的一个问题。使用ajax方式异步提交表单，点击提交按钮后，<br>1.提交页面刷新。ajax使用的是POST方式提交，但是在地址栏出现了GET方式提交才会出现的地址类型。<br><img src="http://oloaybpun.bkt.clouddn.com/%E5%9C%B0%E5%9D%80.PNG" alt="Alt text"><br>2.数据库中数据成功入库，但是回调函数不显示。<br><a id="more"></a><br>00x2 问题分析及解决<br>数据成功入库，说明ajax提交数据是成功的。而在地址栏中，又出现了GET方式提交才会出现的地址类型，说明表单中的数据应该是被提交了两次，第一次以POST方式（ajax中type设置成“POST”）提交，然后再以GET方式提交。</p><p>通过查找资料发现，代码中将button的type设置成了“submit”，将提交按钮的type属性修改成“button”，问题就会解决。<br><img src="http://oloaybpun.bkt.clouddn.com/submit.PNG" alt="Alt text"><br>submit默认为以GET方式进行表单提交（form）。<br>button则响应用户自定义的事件，如果不指定onclick等事件处理函数，它不做任何事情。<br>以ajax方式提交时，jQuery给提交按钮绑定了click事件，ajax中设定了以POST方式提交。而在button中，type被设置成submit，默认以GET方式提交。就引出了关于click和submit执行先后顺序的问题。</p></blockquote><p>00x3 click和submit执行的先后顺序</p><blockquote><p>点击提交按钮时，是先触发click事件，然后再触发submit事件。<br>这里主要说的是click的处理后续和submit的处理后续：click-&gt;click响应事件-&gt;submit响应事件-&gt;submit。click的处理事件完成后，然后轮到submit事件的处理以及处理后的submit。<br>到这一步，感觉问题就快解决了。但是如果ajax提交表单成功之后，再submit以get方式提交的话。过程中就肯定能看到数据入库后返回的回调函数。就说明，ajax提交并没有完全执行，应该是在向后台提交数据之后和在success返回回调信息之间出现了阻塞。</p></blockquote><p>00x4 同步和异步的区别</p><blockquote><p>在JS中负责解释和执行JavaScript代码的线程只有一个。 这里我们叫做主线程。<br>实际上还存在其他的线程。例如：处理AJAX请求的线程、处理DOM事件的线程、定时器线程、读写文件的线程(例如在Node.js中)等等。这些线程可能存在于JS引擎之内，也可能存在于JS引擎之外。我们把它叫做工作线程。<br><img src="http://oloaybpun.bkt.clouddn.com/clipboard.png" alt="Alt text"><br>主线程发起一个异步请求（提交form表单），相应的工作线程接收请求并告知主线程已收到(异步函数返回)；主线程可以继续执行后面的代码，同时工作线程执行异步任务（提交form表单到数据库）；工作线程完成工作后，通知主线程（数据成功入库，返回执行结果，并将其放入消息队列）；主线程收到通知后（主线程通过事件循环从消息队列里取消息），执行一定的动作(调用回调函数来处理返回结果) ；触发submit响应（返回值不为FALSE），执行表单的submit事件。又因为给了action的地址，所以会出现跳转。并且在跳转地址中出现GET方式的提交。</p><p>在同步情况下，主线程发起一个同步请求（提交form表单），相应的工作线程接收请求并立即开始执行同步任务（提交form表单到数据库）；主线程则一直等待，直到工作线程完工作通知主线程（数据成功入库，返回执行结果，回调函数处理返回结果）。因为返回结果不为FALSE，所以在出现提示之后，出现跳转。</p></blockquote><p>00x5 submit阻止表单提交</p><blockquote><p><img src="http://oloaybpun.bkt.clouddn.com/clipboard1.png" alt="Alt text"></p><p>参考：<br>ajax同步和异步的区别：<a href="http://www.open-open.com/lib/view/open1453079994386.html" target="_blank" rel="external">http://www.open-open.com/lib/view/open1453079994386.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;00x1 问题描述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在写蜜罐时，遇到了form表单提交的一个问题。使用ajax方式异步提交表单，点击提交按钮后，&lt;br&gt;1.提交页面刷新。ajax使用的是POST方式提交，但是在地址栏出现了GET方式提交才会出现的地址类型。&lt;br&gt;&lt;img src=&quot;http://oloaybpun.bkt.clouddn.com/%E5%9C%B0%E5%9D%80.PNG&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;2.数据库中数据成功入库，但是回调函数不显示。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ajax" scheme="http://yoursite.com/tags/ajax/"/>
    
  </entry>
  
</feed>
